plot.margin = unit(c(0.1,1,0,0), "lines")
) +
scale_colour_manual(values = brewer.pal(3, "Set1")) +
geom_hline(yintercept = 40, linetype="dashed", color = "black") +
annotate("text", x = 9.2, y = 40, label = "real-time (<= 40 ms)", angle = -90) +
coord_cartesian(
xlim = c(-0.5, 8.5), # this focuses the x-axis on the range of interest
clip = "off" # this keeps the labels from disappearing
)
rbind(load_h("pdigest", "1M"), load_h("raw", "1M")) %>%
filter(X3 <=8) %>%
ggplot(aes(x = X3, y = Mean)) +
geom_bar(aes(fill = X8), stat="identity") +
scale_x_continuous(breaks = round(seq(0, 25, by = 1), 2)) +
facet_wrap(. ~ Bench , scales = "fixed", ncol = 1, labeller = facet_labeller) +
theme_bw() +
labs(fill = "Query Steps") +
scale_fill_manual(values = brewer.pal(3, "Set1"), labels = c("Aggregation", "Intersection", "Selection")) +
labs(titles = "Detailed Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab(paste0("Tile Resolution (", expression('Z'^4), " merge operations")) +
guides(colour = FALSE) +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "top",
legend.direction = "horizontal",
legend.position = c(0.5, 0.98),
legend.title = element_text(size = 11),
plot.margin = unit(c(0.1,1,0,0), "lines")
) +
scale_colour_manual(values = brewer.pal(3, "Set1")) +
geom_hline(yintercept = 40, linetype="dashed", color = "black") +
annotate("text", x = 9.2, y = 40, label = "real-time (<= 40 ms)", angle = -90) +
coord_cartesian(
xlim = c(-0.5, 8.5), # this focuses the x-axis on the range of interest
clip = "off" # this keeps the labels from disappearing
)
expression('Z'^4)
expression('Z^4')
rbind(load_h("pdigest", "1M"), load_h("raw", "1M")) %>%
filter(X3 <=8) %>%
ggplot(aes(x = X3, y = Mean)) +
geom_bar(aes(fill = X8), stat="identity") +
scale_x_continuous(breaks = round(seq(0, 25, by = 1), 2)) +
facet_wrap(. ~ Bench , scales = "fixed", ncol = 1, labeller = facet_labeller) +
theme_bw() +
labs(fill = "Query Steps") +
scale_fill_manual(values = brewer.pal(3, "Set1"), labels = c("Aggregation", "Intersection", "Selection")) +
labs(titles = "Detailed Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab(expression('Z'^4)) +
guides(colour = FALSE) +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "top",
legend.direction = "horizontal",
legend.position = c(0.5, 0.98),
legend.title = element_text(size = 11),
plot.margin = unit(c(0.1,1,0,0), "lines")
) +
scale_colour_manual(values = brewer.pal(3, "Set1")) +
geom_hline(yintercept = 40, linetype="dashed", color = "black") +
annotate("text", x = 9.2, y = 40, label = "real-time (<= 40 ms)", angle = -90) +
coord_cartesian(
xlim = c(-0.5, 8.5), # this focuses the x-axis on the range of interest
clip = "off" # this keeps the labels from disappearing
)
rbind(load_h("pdigest", "1M"), load_h("raw", "1M")) %>%
filter(X3 <=8) %>%
ggplot(aes(x = X3, y = Mean)) +
geom_bar(aes(fill = X8), stat="identity") +
scale_x_continuous(breaks = round(seq(0, 25, by = 1), 2)) +
facet_wrap(. ~ Bench , scales = "fixed", ncol = 1, labeller = facet_labeller) +
theme_bw() +
labs(fill = "Query Steps") +
scale_fill_manual(values = brewer.pal(3, "Set1"), labels = c("Aggregation", "Intersection", "Selection")) +
labs(titles = "Detailed Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab("asd" + expression('Z'^4)) +
guides(colour = FALSE) +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "top",
legend.direction = "horizontal",
legend.position = c(0.5, 0.98),
legend.title = element_text(size = 11),
plot.margin = unit(c(0.1,1,0,0), "lines")
) +
scale_colour_manual(values = brewer.pal(3, "Set1")) +
geom_hline(yintercept = 40, linetype="dashed", color = "black") +
annotate("text", x = 9.2, y = 40, label = "real-time (<= 40 ms)", angle = -90) +
coord_cartesian(
xlim = c(-0.5, 8.5), # this focuses the x-axis on the range of interest
clip = "off" # this keeps the labels from disappearing
)
facet_names <- list(
'pdigest <1M>'="p-digest",
'raw <1M>'="Naive"
)
facet_labeller <- function(variable, value){
return(facet_names[value])
}
rbind(load_h("pdigest", "1M"), load_h("raw", "1M")) %>%
filter(X3 <=8) %>%
ggplot(aes(x = X3, y = Mean)) +
geom_bar(aes(fill = X8), stat="identity") +
scale_x_continuous(breaks = round(seq(0, 25, by = 1), 2)) +
facet_wrap(. ~ Bench , scales = "fixed", ncol = 1, labeller = facet_labeller) +
theme_bw() +
labs(fill = "Query Steps") +
scale_fill_manual(values = brewer.pal(3, "Set1"), labels = c("Aggregation", "Intersection", "Selection")) +
labs(titles = "Detailed Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab(paste0("asd",expression('Z'^4))) +
guides(colour = FALSE) +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "top",
legend.direction = "horizontal",
legend.position = c(0.5, 0.98),
legend.title = element_text(size = 11),
plot.margin = unit(c(0.1,1,0,0), "lines")
) +
scale_colour_manual(values = brewer.pal(3, "Set1")) +
geom_hline(yintercept = 40, linetype="dashed", color = "black") +
annotate("text", x = 9.2, y = 40, label = "real-time (<= 40 ms)", angle = -90) +
coord_cartesian(
xlim = c(-0.5, 8.5), # this focuses the x-axis on the range of interest
clip = "off" # this keeps the labels from disappearing
)
ggsave("bar.pdf")
format(3^3)
rbind(load_h("pdigest", "1M"), load_h("raw", "1M")) %>%
filter(X3 <=8) %>%
ggplot(aes(x = X3, y = Mean)) +
geom_bar(aes(fill = X8), stat="identity") +
scale_x_continuous(breaks = round(seq(0, 25, by = 1), 2)) +
facet_wrap(. ~ Bench , scales = "fixed", ncol = 1, labeller = facet_labeller) +
theme_bw() +
labs(fill = "Query Steps") +
scale_fill_manual(values = brewer.pal(3, "Set1"), labels = c("Aggregation", "Intersection", "Selection")) +
labs(titles = "Detailed Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab(expression('4'^'Z')) +
guides(colour = FALSE) +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "top",
legend.direction = "horizontal",
legend.position = c(0.5, 0.98),
legend.title = element_text(size = 11),
plot.margin = unit(c(0.1,1,0,0), "lines")
) +
scale_colour_manual(values = brewer.pal(3, "Set1")) +
geom_hline(yintercept = 40, linetype="dashed", color = "black") +
annotate("text", x = 9.2, y = 40, label = "real-time (<= 40 ms)", angle = -90) +
coord_cartesian(
xlim = c(-0.5, 8.5), # this focuses the x-axis on the range of interest
clip = "off" # this keeps the labels from disappearing
)
rbind(load_h("pdigest", "1M"), load_h("raw", "1M")) %>%
filter(X3 <=8) %>%
ggplot(aes(x = X3, y = Mean)) +
geom_bar(aes(fill = X8), stat="identity") +
scale_x_continuous(breaks = round(seq(0, 25, by = 1), 2)) +
facet_wrap(. ~ Bench , scales = "fixed", ncol = 1, labeller = facet_labeller) +
theme_bw() +
labs(fill = "Query Steps") +
scale_fill_manual(values = brewer.pal(3, "Set1"), labels = c("Aggregation", "Intersection", "Selection")) +
labs(titles = "Detailed Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab(expression('Tile Resolution (4'^'Z'')')) +
xlab(expression('Tile Resolution (4'^'Z')')) +
facet_names <- list(
'pdigest <1M>'="p-digest",
rbind(load_h("pdigest", "1M"), load_h("raw", "1M")) %>%
filter(X3 <=8) %>%
ggplot(aes(x = X3, y = Mean)) +
geom_bar(aes(fill = X8), stat="identity") +
scale_x_continuous(breaks = round(seq(0, 25, by = 1), 2)) +
facet_wrap(. ~ Bench , scales = "fixed", ncol = 1, labeller = facet_labeller) +
theme_bw() +
labs(fill = "Query Steps") +
scale_fill_manual(values = brewer.pal(3, "Set1"), labels = c("Aggregation", "Intersection", "Selection")) +
labs(titles = "Detailed Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab(expression('Tile Resolution (4'^Z*' merge operations'[2])) +
guides(colour = FALSE) +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "top",
legend.direction = "horizontal",
legend.position = c(0.5, 0.98),
legend.title = element_text(size = 11),
plot.margin = unit(c(0.1,1,0,0), "lines")
) +
scale_colour_manual(values = brewer.pal(3, "Set1")) +
geom_hline(yintercept = 40, linetype="dashed", color = "black") +
annotate("text", x = 9.2, y = 40, label = "real-time (<= 40 ms)", angle = -90) +
coord_cartesian(
xlim = c(-0.5, 8.5), # this focuses the x-axis on the range of interest
clip = "off" # this keeps the labels from disappearing
)
rbind(load_h("pdigest", "1M"), load_h("raw", "1M")) %>%
filter(X3 <=8) %>%
ggplot(aes(x = X3, y = Mean)) +
geom_bar(aes(fill = X8), stat="identity") +
scale_x_continuous(breaks = round(seq(0, 25, by = 1), 2)) +
facet_wrap(. ~ Bench , scales = "fixed", ncol = 1, labeller = facet_labeller) +
theme_bw() +
labs(fill = "Query Steps") +
scale_fill_manual(values = brewer.pal(3, "Set1"), labels = c("Aggregation", "Intersection", "Selection")) +
labs(titles = "Detailed Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab(expression('Tile Resolution (4'^Z*' merge operations)')) +
guides(colour = FALSE) +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "top",
legend.direction = "horizontal",
legend.position = c(0.5, 0.98),
legend.title = element_text(size = 11),
plot.margin = unit(c(0.1,1,0,0), "lines")
) +
scale_colour_manual(values = brewer.pal(3, "Set1")) +
geom_hline(yintercept = 40, linetype="dashed", color = "black") +
annotate("text", x = 9.2, y = 40, label = "real-time (<= 40 ms)", angle = -90) +
coord_cartesian(
xlim = c(-0.5, 8.5), # this focuses the x-axis on the range of interest
clip = "off" # this keeps the labels from disappearing
)
rbind(load_h("pdigest", "1M"), load_h("raw", "1M")) %>%
filter(X3 <=8) %>%
ggplot(aes(x = X3, y = Mean)) +
geom_bar(aes(fill = X8), stat="identity") +
scale_x_continuous(breaks = round(seq(0, 25, by = 1), 2)) +
facet_wrap(. ~ Bench , scales = "fixed", ncol = 1, labeller = facet_labeller) +
theme_bw() +
labs(fill = "Query Steps") +
scale_fill_manual(values = brewer.pal(3, "Set1"), labels = c("Aggregation", "Intersection", "Selection")) +
labs(titles = "Detailed Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab(expression('Tile Resolution (Z) (4'^Z*' merge operations)')) +
guides(colour = FALSE) +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "top",
legend.direction = "horizontal",
legend.position = c(0.5, 0.98),
legend.title = element_text(size = 11),
plot.margin = unit(c(0.1,1,0,0), "lines")
) +
scale_colour_manual(values = brewer.pal(3, "Set1")) +
geom_hline(yintercept = 40, linetype="dashed", color = "black") +
annotate("text", x = 9.2, y = 40, label = "real-time (<= 40 ms)", angle = -90) +
coord_cartesian(
xlim = c(-0.5, 8.5), # this focuses the x-axis on the range of interest
clip = "off" # this keeps the labels from disappearing
)
rbind(load_h("pdigest", "1M"), load_h("raw", "1M")) %>%
filter(X3 <=8) %>%
ggplot(aes(x = X3, y = Mean)) +
geom_bar(aes(fill = X8), stat="identity") +
scale_x_continuous(breaks = round(seq(0, 25, by = 1), 2)) +
facet_wrap(. ~ Bench , scales = "fixed", ncol = 1, labeller = facet_labeller) +
theme_bw() +
labs(fill = "Query Steps") +
scale_fill_manual(values = brewer.pal(3, "Set1"), labels = c("Aggregation", "Intersection", "Selection")) +
labs(titles = "Detailed Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab(expression('Tile Resolution (z) (4'^Z*' merge operations)')) +
guides(colour = FALSE) +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "top",
legend.direction = "horizontal",
legend.position = c(0.5, 0.98),
legend.title = element_text(size = 11),
plot.margin = unit(c(0.1,1,0,0), "lines")
) +
scale_colour_manual(values = brewer.pal(3, "Set1")) +
geom_hline(yintercept = 40, linetype="dashed", color = "black") +
annotate("text", x = 9.2, y = 40, label = "real-time (<= 40 ms)", angle = -90) +
coord_cartesian(
xlim = c(-0.5, 8.5), # this focuses the x-axis on the range of interest
clip = "off" # this keeps the labels from disappearing
)
rbind(load_h("pdigest", "1M"), load_h("raw", "1M")) %>%
filter(X3 <=8) %>%
ggplot(aes(x = X3, y = Mean)) +
geom_bar(aes(fill = X8), stat="identity") +
scale_x_continuous(breaks = round(seq(0, 25, by = 1), 2)) +
facet_wrap(. ~ Bench , scales = "fixed", ncol = 1, labeller = facet_labeller) +
theme_bw() +
labs(fill = "Query Steps") +
scale_fill_manual(values = brewer.pal(3, "Set1"), labels = c("Aggregation", "Intersection", "Selection")) +
labs(titles = "Detailed Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab(expression('Tile Resolution (z) -- (4'^Z*' merge operations)')) +
guides(colour = FALSE) +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "top",
legend.direction = "horizontal",
legend.position = c(0.5, 0.98),
legend.title = element_text(size = 11),
plot.margin = unit(c(0.1,1,0,0), "lines")
) +
scale_colour_manual(values = brewer.pal(3, "Set1")) +
geom_hline(yintercept = 40, linetype="dashed", color = "black") +
annotate("text", x = 9.2, y = 40, label = "real-time (<= 40 ms)", angle = -90) +
coord_cartesian(
xlim = c(-0.5, 8.5), # this focuses the x-axis on the range of interest
clip = "off" # this keeps the labels from disappearing
)
facet_names <- list(
'pdigest <1M>'="p-digest",
'raw <1M>'="Naive"
)
facet_labeller <- function(variable, value){
return(facet_names[value])
}
rbind(load_h("pdigest", "1M"), load_h("raw", "1M")) %>%
filter(X3 <=8) %>%
ggplot(aes(x = X3, y = Mean)) +
geom_bar(aes(fill = X8), stat="identity") +
scale_x_continuous(breaks = round(seq(0, 25, by = 1), 2)) +
facet_wrap(. ~ Bench , scales = "fixed", ncol = 1, labeller = facet_labeller) +
theme_bw() +
labs(fill = "Query Steps") +
scale_fill_manual(values = brewer.pal(3, "Set1"), labels = c("Aggregation", "Intersection", "Selection")) +
labs(titles = "Detailed Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab(expression('Tile Resolution (z) (4'^Z*' merge operations)')) +
guides(colour = FALSE) +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "top",
legend.direction = "horizontal",
legend.position = c(0.5, 0.98),
legend.title = element_text(size = 11),
plot.margin = unit(c(0.1,1,0,0), "lines")
) +
scale_colour_manual(values = brewer.pal(3, "Set1")) +
geom_hline(yintercept = 40, linetype="dashed", color = "black") +
annotate("text", x = 9.2, y = 40, label = "real-time (<= 40 ms)", angle = -90) +
coord_cartesian(
xlim = c(-0.5, 8.5), # this focuses the x-axis on the range of interest
clip = "off" # this keeps the labels from disappearing
)
ggsave("bar.pdf")
format(3^3)
rbind(load_h("pdigest", "1M"), load_h("raw", "1M")) %>%
filter(X3 <=8) %>%
ggplot(aes(x = X3, y = Mean)) +
geom_bar(aes(fill = X8), stat="identity") +
scale_x_continuous(breaks = round(seq(0, 25, by = 1), 2)) +
facet_wrap(. ~ Bench , scales = "fixed", ncol = 1, labeller = facet_labeller) +
theme_bw() +
labs(fill = "Query Steps") +
scale_fill_manual(values = brewer.pal(3, "Set1"), labels = c("Aggregation", "Intersection", "Selection")) +
labs(titles = "Detailed Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab(expression('Tile Resolution (z) (== 4'^Z*' merge operations)')) +
guides(colour = FALSE) +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "top",
legend.direction = "horizontal",
legend.position = c(0.5, 0.98),
legend.title = element_text(size = 11),
plot.margin = unit(c(0.1,1,0,0), "lines")
) +
scale_colour_manual(values = brewer.pal(3, "Set1")) +
geom_hline(yintercept = 40, linetype="dashed", color = "black") +
annotate("text", x = 9.2, y = 40, label = "real-time (<= 40 ms)", angle = -90) +
coord_cartesian(
xlim = c(-0.5, 8.5), # this focuses the x-axis on the range of interest
clip = "off" # this keeps the labels from disappearing
)
facet_names <- list(
'pdigest <1M>'="p-digest",
'raw <1M>'="Naive"
)
facet_labeller <- function(variable, value){
return(facet_names[value])
}
rbind(load_h("pdigest", "1M"), load_h("raw", "1M")) %>%
filter(X3 <=8) %>%
ggplot(aes(x = X3, y = Mean)) +
geom_bar(aes(fill = X8), stat="identity") +
scale_x_continuous(breaks = round(seq(0, 25, by = 1), 2)) +
facet_wrap(. ~ Bench , scales = "fixed", ncol = 1, labeller = facet_labeller) +
theme_bw() +
labs(fill = "Query Steps") +
scale_fill_manual(values = brewer.pal(3, "Set1"), labels = c("Aggregation", "Intersection", "Selection")) +
labs(titles = "Detailed Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab(expression('Tile Resolution (z) (%<=>% 4'^Z*' merge operations)')) +
guides(colour = FALSE) +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "top",
legend.direction = "horizontal",
legend.position = c(0.5, 0.98),
legend.title = element_text(size = 11),
plot.margin = unit(c(0.1,1,0,0), "lines")
) +
scale_colour_manual(values = brewer.pal(3, "Set1")) +
geom_hline(yintercept = 40, linetype="dashed", color = "black") +
annotate("text", x = 9.2, y = 40, label = "real-time (<= 40 ms)", angle = -90) +
coord_cartesian(
xlim = c(-0.5, 8.5), # this focuses the x-axis on the range of interest
clip = "off" # this keeps the labels from disappearing
)
ggsave("bar.pdf")
format(3^3)
rbind(load_h("pdigest", "1M"), load_h("raw", "1M")) %>%
filter(X3 <=8) %>%
ggplot(aes(x = X3, y = Mean)) +
geom_bar(aes(fill = X8), stat="identity") +
scale_x_continuous(breaks = round(seq(0, 25, by = 1), 2)) +
facet_wrap(. ~ Bench , scales = "fixed", ncol = 1, labeller = facet_labeller) +
theme_bw() +
labs(fill = "Query Steps") +
scale_fill_manual(values = brewer.pal(3, "Set1"), labels = c("Aggregation", "Intersection", "Selection")) +
labs(titles = "Detailed Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab(expression('Tile Resolution (z) (<=> 4'^Z*' merge operations)')) +
guides(colour = FALSE) +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "top",
legend.direction = "horizontal",
legend.position = c(0.5, 0.98),
legend.title = element_text(size = 11),
plot.margin = unit(c(0.1,1,0,0), "lines")
) +
scale_colour_manual(values = brewer.pal(3, "Set1")) +
geom_hline(yintercept = 40, linetype="dashed", color = "black") +
annotate("text", x = 9.2, y = 40, label = "real-time (<= 40 ms)", angle = -90) +
coord_cartesian(
xlim = c(-0.5, 8.5), # this focuses the x-axis on the range of interest
clip = "off" # this keeps the labels from disappearing
)
facet_names <- list(
'pdigest <1M>'="p-digest",
'raw <1M>'="Naive"
)
facet_labeller <- function(variable, value){
return(facet_names[value])
}
rbind(load_h("pdigest", "1M"), load_h("raw", "1M")) %>%
filter(X3 <=8) %>%
ggplot(aes(x = X3, y = Mean)) +
geom_bar(aes(fill = X8), stat="identity") +
scale_x_continuous(breaks = round(seq(0, 25, by = 1), 2)) +
facet_wrap(. ~ Bench , scales = "fixed", ncol = 1, labeller = facet_labeller) +
theme_bw() +
labs(fill = "Query Steps") +
scale_fill_manual(values = brewer.pal(3, "Set1"), labels = c("Aggregation", "Intersection", "Selection")) +
labs(titles = "Detailed Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab(expression('Tile Resolution (z) (' %<=>% '4'^Z*' merge operations)')) +
guides(colour = FALSE) +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "top",
legend.direction = "horizontal",
legend.position = c(0.5, 0.98),
legend.title = element_text(size = 11),
plot.margin = unit(c(0.1,1,0,0), "lines")
) +
scale_colour_manual(values = brewer.pal(3, "Set1")) +
geom_hline(yintercept = 40, linetype="dashed", color = "black") +
annotate("text", x = 9.2, y = 40, label = "real-time (<= 40 ms)", angle = -90) +
coord_cartesian(
xlim = c(-0.5, 8.5), # this focuses the x-axis on the range of interest
clip = "off" # this keeps the labels from disappearing
)
ggsave("bar.pdf")
format(3^3)
