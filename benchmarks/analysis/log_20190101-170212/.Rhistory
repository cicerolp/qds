labs(title = "") +
# labs(title = "Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab("") +
# guides(colour = FALSE) +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "center",
legend.direction = "horizontal",
# legend.text = element_text(angle = 90, hjust = 1),
# legend.position = c(0.5, 0.98),
legend.position = "top",
# legend.title = element_text(size = 11),
# legend.title = element_blank(),
legend.margin = margin(t = -0.1, b = -0.2, unit='cm'),
plot.margin = unit(c(0,0.1,0,-0.9), "lines"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.y = element_text(size = 8)
) +
scale_colour_manual(values = c('#377EB8', '#E41A1C', '#984ea3', '#ff7f00', '#4daf4a')) +
scale_y_continuous(trans='log10', breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(limits = rev(levels(data$Bench))) +
facet_wrap(~ Size, scales = "free_x", ncol = 1, strip.position="right") +
guides(colour = guide_legend(title = "Performance of Quantile (0.5) Computation"))
# ggsave("boxplot.pdf")
data %>%
filter(X3 <= 8) %>%
ggplot(aes(x = Bench, y = Mean)) +
geom_boxplot(aes(colour = Bench)) +
coord_flip() +
labs(title = "") +
# labs(title = "Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab("") +
# guides(colour = FALSE) +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "center",
legend.direction = "horizontal",
# legend.text = element_text(angle = 90, hjust = 1),
# legend.position = c(0.5, 0.98),
legend.position = "top",
# legend.title = element_text(size = 11),
# legend.title = element_blank(),
legend.margin = margin(t = -0.1, b = -0.2, unit='cm'),
plot.margin = unit(c(0,0.1,0,-0.9), "lines"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.y = element_text(size = 8)
) +
scale_colour_manual(values = c('#377EB8', '#E41A1C', '#984ea3', '#ff7f00', '#4daf4a')) +
scale_y_continuous(trans='log10', breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(limits = rev(levels(data$Bench))) +
# facet_wrap(~ Size, scales = "free_x", ncol = 1, strip.position="right") +
guides(colour = guide_legend(title = "Performance of Quantile (0.5) Computation"))
# ggsave("boxplot.pdf")
data %>%
filter(X3 <= 8) %>%
ggplot(aes(x = Bench, y = Mean)) +
geom_boxplot(aes(colour = Bench)) +
coord_flip() +
labs(title = "") +
# labs(title = "Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab("") +
# guides(colour = FALSE) +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "center",
legend.direction = "horizontal",
# legend.text = element_text(angle = 90, hjust = 1),
# legend.position = c(0.5, 0.98),
legend.position = "top",
# legend.title = element_text(size = 11),
# legend.title = element_blank(),
legend.margin = margin(t = -0.1, b = -0.2, unit='cm'),
plot.margin = unit(c(0,0.1,0,-0.9), "lines"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.y = element_text(size = 8)
) +
scale_colour_manual(values = c('#377EB8', '#E41A1C', '#984ea3', '#ff7f00', '#4daf4a')) +
scale_y_continuous(trans='log10', breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(limits = rev(levels(data$Bench))) +
# facet_wrap(~ Size, scales = "free_x", ncol = 1, strip.position="right") +
guides(colour = guide_legend(title = "Quantile Queries"))
# ggsave("boxplot.pdf")
data %>%
filter(X3 <= 8) %>%
ggplot(aes(x = Bench, y = Mean)) +
geom_boxplot(aes(colour = Bench)) +
coord_flip() +
labs(title = "") +
# labs(title = "Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab("") +
# guides(colour = FALSE) +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "center",
legend.direction = "horizontal",
# legend.text = element_text(angle = 90, hjust = 1),
# legend.position = c(0.5, 0.98),
legend.position = "top",
# legend.title = element_text(size = 11),
# legend.title = element_blank(),
legend.margin = margin(t = -0.1, b = -0.2, unit='cm'),
plot.margin = unit(c(0,0.1,0,-0.9), "lines"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.y = element_text(size = 8)
) +
scale_colour_manual(values = c('#377EB8', '#E41A1C', '#984ea3', '#ff7f00', '#4daf4a')) +
scale_y_continuous(trans='log10', breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(limits = rev(levels(data$Bench))) +
# facet_wrap(~ Size, scales = "free_x", ncol = 1, strip.position="right") +
guides(colour = guide_legend(title = "Quantile Queries"))
# ggsave("boxplot.pdf")
```{r fig.height=2.6, fig.width=6}
data %>%
filter(X3 <= 8) %>%
ggplot(aes(x = Bench, y = Mean)) +
geom_boxplot(aes(colour = Bench)) +
coord_flip() +
labs(title = "") +
# labs(title = "Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab("") +
# guides(colour = FALSE) +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "center",
legend.direction = "horizontal",
# legend.text = element_text(angle = 90, hjust = 1),
# legend.position = c(0.5, 0.98),
legend.position = "top",
# legend.title = element_text(size = 11),
# legend.title = element_blank(),
legend.margin = margin(t = -0.1, b = -0.2, unit='cm'),
plot.margin = unit(c(0,0.1,0,-0.9), "lines"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.y = element_text(size = 8)
) +
scale_colour_manual(values = c('#377EB8', '#E41A1C', '#984ea3', '#ff7f00', '#4daf4a')) +
scale_y_continuous(trans='log10', breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(limits = rev(levels(data$Bench))) +
# facet_wrap(~ Size, scales = "free_x", ncol = 1, strip.position="right") +
guides(colour = guide_legend(title = "Quantile Queries"))
# ggsave("boxplot.pdf")
data %>%
filter(X3 <= 8) %>%
ggplot(aes(x = Bench, y = Mean)) +
geom_boxplot(aes(colour = Bench)) +
coord_flip() +
labs(title = "") +
# labs(title = "Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab("") +
# guides(colour = FALSE) +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "center",
legend.direction = "horizontal",
# legend.text = element_text(angle = 90, hjust = 1),
# legend.position = c(0.5, 0.98),
legend.position = "top",
# legend.title = element_text(size = 11),
# legend.title = element_blank(),
legend.margin = margin(t = -0.1, b = -0.2, unit='cm'),
plot.margin = unit(c(0,0.1,0,-0.9), "lines"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.y = element_text(size = 8)
) +
scale_colour_manual(values = c('#377EB8', '#E41A1C', '#984ea3', '#ff7f00', '#4daf4a')) +
scale_y_continuous(trans='log10', breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(limits = rev(levels(data$Bench))) +
# facet_wrap(~ Size, scales = "free_x", ncol = 1, strip.position="right") +
guides(colour = guide_legend(title = "Quantile Queries"))
# ggsave("boxplot.pdf")
```{r fig.height=2.3, fig.width=6}
data %>%
filter(X3 <= 8) %>%
ggplot(aes(x = Bench, y = Mean)) +
geom_boxplot(aes(colour = Bench)) +
coord_flip() +
labs(title = "") +
# labs(title = "Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab("") +
# guides(colour = FALSE) +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "center",
legend.direction = "horizontal",
# legend.text = element_text(angle = 90, hjust = 1),
# legend.position = c(0.5, 0.98),
legend.position = "top",
# legend.title = element_text(size = 11),
# legend.title = element_blank(),
legend.margin = margin(t = -0.1, b = -0.2, unit='cm'),
plot.margin = unit(c(0,0.1,0,-0.9), "lines"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.y = element_text(size = 8)
) +
scale_colour_manual(values = c('#377EB8', '#E41A1C', '#984ea3', '#ff7f00', '#4daf4a')) +
scale_y_continuous(trans='log10', breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(limits = rev(levels(data$Bench))) +
# facet_wrap(~ Size, scales = "free_x", ncol = 1, strip.position="right") +
guides(colour = guide_legend(title = "Quantile Queries"))
# ggsave("boxplot.pdf")
```{r fig.height=2.0, fig.width=6}
data %>%
filter(X3 <= 8) %>%
ggplot(aes(x = Bench, y = Mean)) +
geom_boxplot(aes(colour = Bench)) +
coord_flip() +
labs(title = "") +
# labs(title = "Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab("") +
# guides(colour = FALSE) +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "center",
legend.direction = "horizontal",
# legend.text = element_text(angle = 90, hjust = 1),
# legend.position = c(0.5, 0.98),
legend.position = "top",
# legend.title = element_text(size = 11),
# legend.title = element_blank(),
legend.margin = margin(t = -0.1, b = -0.2, unit='cm'),
plot.margin = unit(c(0,0.1,0,-0.9), "lines"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.y = element_text(size = 8)
) +
scale_colour_manual(values = c('#377EB8', '#E41A1C', '#984ea3', '#ff7f00', '#4daf4a')) +
scale_y_continuous(trans='log10', breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(limits = rev(levels(data$Bench))) +
# facet_wrap(~ Size, scales = "free_x", ncol = 1, strip.position="right") +
guides(colour = guide_legend(title = "Quantile Queries"))
# ggsave("boxplot.pdf")
data %>%
filter(X3 <= 8) %>%
ggplot(aes(x = Bench, y = Mean)) +
geom_boxplot(aes(colour = Bench)) +
coord_flip() +
labs(title = "") +
# labs(title = "Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab("") +
# guides(colour = FALSE) +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "center",
legend.direction = "horizontal",
# legend.text = element_text(angle = 90, hjust = 1),
# legend.position = c(0.5, 0.98),
legend.position = "top",
# legend.title = element_text(size = 11),
# legend.title = element_blank(),
legend.margin = margin(t = -0.1, b = -0.2, unit='cm'),
plot.margin = unit(c(0,0.1,0,-0.9), "lines"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.y = element_text(size = 8)
) +
scale_colour_manual(values = c('#377EB8', '#E41A1C', '#984ea3', '#ff7f00', '#4daf4a')) +
scale_y_continuous(trans='log10', breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(limits = rev(levels(data$Bench))) +
# facet_wrap(~ Size, scales = "free_x", ncol = 1, strip.position="right") +
guides(colour = guide_legend(title = "Quantile Queries"))
# ggsave("boxplot.pdf")
data %>%
filter(X3 <= 8) %>%
ggplot(aes(x = Bench, y = Mean)) +
geom_boxplot(aes(colour = Bench)) +
coord_flip() +
labs(title = "") +
# labs(title = "Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab("") +
# guides(colour = FALSE) +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "center",
legend.direction = "horizontal",
# legend.text = element_text(angle = 90, hjust = 1),
# legend.position = c(0.5, 0.98),
legend.position = "top",
# legend.title = element_text(size = 11),
# legend.title = element_blank(),
legend.margin = margin(t = -0.1, b = -0.2, unit='cm'),
plot.margin = unit(c(0,0.1,0,-0.9), "lines"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.y = element_text(size = 8)
) +
scale_colour_manual(values = c('#377EB8', '#E41A1C', '#984ea3', '#ff7f00', '#4daf4a')) +
scale_y_continuous(trans='log10', breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(limits = rev(levels(data$Bench))) +
# facet_wrap(~ Size, scales = "free_x", ncol = 1, strip.position="right") +
guides(colour = guide_legend(title = "Quantile Queries"))
# ggsave("boxplot.pdf")
data %>%
filter(X3 <= 8) %>%
ggplot(aes(x = Bench, y = Mean)) +
geom_boxplot(aes(colour = Bench)) +
coord_flip() +
labs(title = "") +
# labs(title = "Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab("") +
# guides(colour = FALSE) +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "center",
legend.direction = "horizontal",
# legend.text = element_text(angle = 90, hjust = 1),
# legend.position = c(0.5, 0.98),
legend.position = "top",
# legend.title = element_text(size = 11),
# legend.title = element_blank(),
legend.margin = margin(t = -0.1, b = -0.2, unit='cm'),
plot.margin = unit(c(0,0.1,0,-0.9), "lines"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.y = element_text(size = 8)
) +
scale_colour_manual(values = c('#377EB8', '#E41A1C', '#984ea3', '#ff7f00', '#4daf4a')) +
scale_y_continuous(trans='log10', breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(limits = rev(levels(data$Bench))) +
facet_wrap(~ Size, scales = "free_x", ncol = 1, strip.position="right") +
guides(colour = guide_legend(title = "Quantile Queries"))
# ggsave("boxplot.pdf")
data %>%
filter(X3 <= 8) %>%
ggplot(aes(x = Bench, y = Mean)) +
geom_boxplot(aes(colour = Bench), outlier.alpha = 1.0) +
coord_flip() +
labs(title = "") +
# labs(title = "Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab("") +
# guides(colour = FALSE) +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "center",
legend.direction = "horizontal",
# legend.text = element_text(angle = 90, hjust = 1),
# legend.position = c(0.5, 0.98),
legend.position = "top",
# legend.title = element_text(size = 11),
# legend.title = element_blank(),
legend.margin = margin(t = -0.1, b = -0.2, unit='cm'),
plot.margin = unit(c(0,0.1,0,-0.9), "lines"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.y = element_text(size = 8)
) +
scale_colour_manual(values = c('#377EB8', '#E41A1C', '#984ea3', '#ff7f00', '#4daf4a')) +
scale_y_continuous(trans='log10', breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(limits = rev(levels(data$Bench))) +
facet_wrap(~ Size, scales = "free_x", ncol = 1, strip.position="right") +
guides(colour = guide_legend(title = "Quantile Queries"))
# ggsave("boxplot.pdf")
data %>%
filter(X3 <= 8) %>%
ggplot(aes(x = Bench, y = Mean)) +
geom_boxplot(aes(colour = Bench), outlier.alpha = 1.0) +
coord_flip() +
labs(title = "") +
# labs(title = "Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab("") +
# guides(colour = FALSE) +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "center",
legend.direction = "horizontal",
# legend.text = element_text(angle = 90, hjust = 1),
# legend.position = c(0.5, 0.98),
legend.position = "top",
# legend.title = element_text(size = 11),
# legend.title = element_blank(),
legend.margin = margin(t = -0.1, b = -0.2, unit='cm'),
plot.margin = unit(c(0,0.1,0,-0.9), "lines"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.y = element_text(size = 8)
) +
scale_colour_manual(values = c('#377EB8', '#E41A1C', '#984ea3', '#ff7f00', '#4daf4a')) +
scale_y_continuous(trans='log10', breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(limits = rev(levels(data$Bench))) +
facet_wrap(~ Size, scales = "free_x", ncol = 1, strip.position="right") +
guides(colour = guide_legend(title = "Quantile Queries"))
# ggsave("boxplot.pdf")
data %>%
filter(X3 <= 8) %>%
ggplot(aes(x = Bench, y = Mean)) +
geom_boxplot(aes(colour = Bench), outlier.alpha = 1.0) +
coord_flip() +
labs(title = "") +
# labs(title = "Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab("") +
# guides(colour = FALSE) +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "center",
legend.direction = "horizontal",
# legend.text = element_text(angle = 90, hjust = 1),
# legend.position = c(0.5, 0.98),
legend.position = "top",
# legend.title = element_text(size = 11),
# legend.title = element_blank(),
legend.margin = margin(t = -0.1, b = -0.2, unit='cm'),
plot.margin = unit(c(0,0.1,0,-0.9), "lines"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.y = element_text(size = 8)
) +
scale_colour_manual(values = c('#377EB8', '#E41A1C', '#984ea3', '#ff7f00', '#4daf4a')) +
scale_y_continuous(trans='log10', breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(limits = rev(levels(data$Bench))) +
facet_wrap(~ Size, scales = "free_x", ncol = 1, strip.position="right") +
guides(colour = guide_legend(title = "Quantile Queries"))
ggsave("boxplot.pdf")
ggsave("boxplot.png")
data <- rbind(data, df)
data$Bench <- factor(data$Bench, levels = c("QDS", "Naive", "SQLite", "PostgreSQL", "MonetDB"))
data %>%
filter(X3 <= 8) %>%
ggplot(aes(x = Bench, y = Mean)) +
geom_boxplot(aes(colour = Bench), outlier.alpha = 1.0) +
coord_flip() +
labs(title = "") +
# labs(title = "Performance of Quantile (0.5) Computation") +
ylab("Running Time (ms)") +
xlab("") +
# guides(colour = FALSE) +
theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, size = 11),
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
legend.justification = "center",
legend.direction = "horizontal",
# legend.text = element_text(angle = 90, hjust = 1),
# legend.position = c(0.5, 0.98),
legend.position = "top",
# legend.title = element_text(size = 11),
# legend.title = element_blank(),
legend.margin = margin(t = -0.1, b = -0.2, unit='cm'),
plot.margin = unit(c(0,0.1,0,-0.9), "lines"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.text.y = element_text(size = 8)
) +
scale_colour_manual(values = c('#377EB8', '#E41A1C', '#984ea3', '#ff7f00', '#4daf4a')) +
scale_y_continuous(trans='log10', breaks = trans_breaks("log10", function(x) 10^x), labels = trans_format("log10", math_format(10^.x))) +
scale_x_discrete(limits = rev(levels(data$Bench))) +
facet_wrap(~ Size, scales = "free_x", ncol = 1, strip.position="right") +
guides(colour = guide_legend(title = "Quantile Queries"))
ggsave("boxplot.pdf")
ggsave("boxplot.png")
